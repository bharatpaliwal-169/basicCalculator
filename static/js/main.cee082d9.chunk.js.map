{"version":3,"sources":["components/Main.js","components/Output.js","components/Keypad.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","onClick","button","calculate","reset","backspace","setState","result","state","slice","calc","includes","replace","eval","e","className","output","this","Component","Output","Keypad","name","target","Header","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cee082d9.chunk.js","sourcesContent":["import React ,{Component} from 'react';\r\nimport './main.css';\r\nimport Output from './Output';\r\nimport Keypad from './Keypad';\r\n\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            result: ''\r\n        };\r\n    }\r\n\r\n    onClick = button =>{\r\n        if(button === \"=\"){\r\n            this.calculate()\r\n        }\r\n        else if(button === \"Clear All\"){\r\n            this.reset()\r\n        }\r\n        else if(button === \"Clear\"){\r\n            this.backspace()\r\n        }\r\n        \r\n        else{\r\n            this.setState({\r\n                result : this.state.result + button\r\n            });\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            result : ''\r\n        });\r\n    }\r\n\r\n    backspace = () => {\r\n        this.setState({\r\n            result : this.state.result.slice(0,-1)\r\n        });\r\n    }\r\n\r\n    calculate = () => {\r\n        var calc = ''\r\n\r\n        if(this.state.result.includes(\"--\")){\r\n            calc = this.state.result.replace(\"--\",\"+\")\r\n        }\r\n\r\n        else {\r\n            calc = this.state.result\r\n        }\r\n\r\n        try{\r\n            this.setState({\r\n                result : (eval(calc) || \"\" )+ \"\"\r\n            });\r\n        }\r\n\r\n        catch(e){\r\n            this.setState({\r\n                result: \"error\"\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <Output output={this.state.result} />\r\n                <Keypad onClick={this.onClick} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React ,{Component} from 'react';\r\nimport './main.css';\r\n\r\nclass Output extends Component{\r\n    render(){\r\n        let {output} = this.props;\r\n        return(\r\n            <div className='result'>\r\n                <p> {output} </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Output;\r\n\r\n","import React ,{Component} from 'react';\r\nimport './main.css';\r\n\r\n\r\n\r\nclass Keypad extends Component{\r\n    render(){\r\n        return(\r\n            <div className='keypad'>\r\n                <div  className='row'>\r\n                    <button name = \"(\" onClick={e => this.props.onClick(e.target.name)}\r\n                        className='num'\r\n                    >\r\n                        (\r\n                    </button>\r\n                    <button className='num' name = \")\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        )\r\n                    </button>\r\n                    <button className='num' name = \"Clear\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        C\r\n                    </button>\r\n                    <button className='CA' name = \"Clear All\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        CA\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n                <div  className='row'>\r\n                    <button className='num' name = \"7\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        7\r\n                    </button>\r\n                    <button className='num' name = \"8\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        8\r\n                    </button>\r\n                    <button name = \"9\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        9\r\n                    </button>\r\n                    <button className='op' name = \"/\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        /\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n                <div  className='row'>\r\n                    <button name = \"4\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        4\r\n                    </button>\r\n                    <button className='num' name = \"5\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        5\r\n                    </button>\r\n                    <button className='num' name = \"6\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        6\r\n                    </button>\r\n                    <button className='op' name = \"*\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        *\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n                <div  className='row'>\r\n                    <button name = \"1\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        1\r\n                    </button>\r\n                    <button name = \"2\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        2\r\n                    </button>\r\n                    <button name = \"3\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        3\r\n                    </button>\r\n                    <button className='op' name = \"+\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        +\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n                <div  className='row'>\r\n                    <button className='num' name = \".\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        .\r\n                    </button>\r\n                    <button className='num' name = \"0\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        0\r\n                    </button>\r\n                    <button name = \"=\" className='num' onClick={e => this.props.onClick(e.target.name)}>\r\n                        =\r\n                    </button>\r\n                    <button className='op' name = \"-\" onClick={e => this.props.onClick(e.target.name)}>\r\n                        -\r\n                    </button>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Keypad;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './main.css';\r\n\r\n\r\nfunction Header(){\r\n    return(\r\n        <div className='header'>\r\n            <h1>Basic Calculator</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\nimport './main.css';\r\n\r\n\r\nclass Footer extends Component{\r\n  render(){\r\n    return(\r\n      <footer className='footer-style'>\r\n        <div className='flex-container'>\r\n          <div>\r\n            <p className='foot-text '> C&D : Bharat Paliwal </p>\r\n          </div>\r\n          \r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Main />\n     \n      <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}